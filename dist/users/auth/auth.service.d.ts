import { User } from 'src/users/entities/user.entity';
import { Repository } from 'typeorm';
import { JwtService } from '@nestjs/jwt';
import { CreateUserInput } from '../dto/create-user.input';
import { LoginResponse } from '../dto/login-response';
import { LoginUserInput } from '../dto/login-user-input';
import { RoleService } from '../role.service';
export declare class AuthService {
    private userRepo;
    private jwtService;
    private readonly roleService;
    constructor(userRepo: Repository<User>, jwtService: JwtService, roleService: RoleService);
    validateUser(email: string, pass: string): Promise<{
        id: string;
        email: string;
        phoneNumber: string;
        status: import("src/users/entities/user.entity").UserStatus;
        vendorName: string;
        engagementType: import("src/users/entities/user.entity").EngagementType;
        rpocName: string;
        rpocEmail: string;
        rpocContactNumber: string;
        firstName: string;
        lastName: string;
        middleName: string;
        idCardNumber: string;
        taxNumber: string;
        languages: string;
        nationality: string;
        region: string;
        country: string;
        state: string;
        city: string;
        postalCode: string;
        addressLine1: string;
        addressLine2: string;
        whatsappNumber: string;
        cogentEmail: string;
        descriptionColor: string;
        hourlyRate: string;
        halfDayRate: string;
        fullDayRate: string;
        monthlyRate: string;
        anyExtraRate: string;
        roles: import("../entities/role.entity").Role[];
        createdAt: Date;
        updatedAt: Date;
    }>;
    login(loginUserInput: LoginUserInput): Promise<LoginResponse>;
    signup(createUserInput: CreateUserInput): Promise<{
        password: string;
        roles: import("../entities/role.entity").Role[];
        email: string;
        phoneNumber?: string;
    } & User>;
}
